services:
  influxdb:
    image: influxdb:2.7
    restart: always
    env_file:
      - .env
    ports:
      - 8086:8086
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    networks:
      - iot_campus_uis
    volumes:
      - $PWD/data:/var/lib/influxdb2
      - $PWD/config:/etc/influxdb2

  mongodb:
    image: mongo
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    networks:
      - iot_campus_uis
    volumes:
      - $PWD/mongodb_data:/data/db

  minio:
    image: quay.io/minio/minio
    restart: always
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: S{MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio/data:/data
    command: server /data --console-address ":9001"
    networks:
      - iot_campus_uis

  rabbitmq:
    image: 4.0-management
    restart: always
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - iot_campus_uis
      - mocker

  emqx:
    image: emqx:5.8.6
    restart: always
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
    networks:
      - iot_campus_uis
      - mocker

  data:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8080:8080
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - MQTT_BROKER_URL=${MQTT_BROKER_URL}
      - MQTT_BROKER_CLIENT_ID=${MQTT_BROKER_CLIENT_ID}
      - TOPIC_LISTENER=${TOPIC_LISTENER}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_AUTH_DB=${MONGO_AUTH_DB}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MINIO_URL=${MINIO_URL}
      - MINIO_ACCES_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}

    depends_on:
      influxdb:
        condition: service_healthy
      mongo:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      emqx:
        condition: service_started
    networks:
      - iot_campus_uis

  grafana:
    image: "grafana/grafana:11.6.1"
    env_file:
      - .env
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - '$PWD/data/grafana:/var/lib/grafana'
    networks:
      - iot_campus_uis
    depends_on:
      - influxdb

networks:
  smart_campus_workshop_iot_campus_uis:
    external: true
  mocker:
    external: true
  iot_campus_uis:
    driver: bridge